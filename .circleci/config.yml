---

############################
# Build Jahia images and push them on a private repo for test purpose
# Pull Jahia images and test them automatically
# Ask for human validation before pushing images to the public repo
############################

version: 2.1

orbs:
  docker: circleci/docker@1.0.1
  slack: circleci/slack@3.4.2
  anchore: anchore/anchore-engine@1.8.1

commands:
  build_jahia:
    description: "Build Jahia images and push them on a private repo for test purpose"
    parameters:
      repo:
        type: string
        default: maxencea/jahia_test
      jver:
        type: string
      base_url:
        type: string
      xml_suffix:
        type: string
        default: "_v8"
      tag_suffix:
        type: string
        default: ""
      dbms_type:
        type: string
        default: "mariadb"
      debug_tools:
        type: string
        default: "false"
      ffmpeg:
        type: string
        default: "false"
      libreoffice:
        type: string
        default: "false"
      ds_in_db:
        type: string
        default: "true"
      healthcheck_ver:
        type: string
        default: "2.0.3"
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          step-name: "Build << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
          image: "<< parameters.repo >>"
          dockerfile: Dockerfile
          extra_build_args:
            '
            --build-arg BASE_URL="<< parameters.base_url >>"
            --build-arg DBMS_TYPE="<< parameters.dbms_type >>"
            --build-arg INSTALL_FILE_SUFFIX="<< parameters.xml_suffix >>"
            --build-arg DEBUG_TOOLS="<< parameters.debug_tools >>"
            --build-arg FFMPEG="<< parameters.ffmpeg >>"
            --build-arg LIBREOFFICE="<< parameters.libreoffice >>"
            --build-arg DS_IN_DB="<< parameters.ds_in_db >>"
            --build-arg HEALTHCHECK_VER="<< parameters.healthcheck_ver >>"
            --no-cache
            '
      - docker/push:
          step-name: "Push to test repo << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          image: "<< parameters.repo >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
      - slack/status:
          channel: "slack_trigger_test"
          failure_message: |
            ':alert: Building jahia:<< parameters.jver >><< parameters.tag_suffix >> has failed !'
          success_message: |
            ':building_construction: Building jahia:<< parameters.jver >><< parameters.tag_suffix >> successfully.'
  scan_jahia:
    description: "Pull and scan a docker image"
    parameters:
      repo:
        type: string
        default: maxencea/jahia_test
      jver:
        type: string
      tag_suffix:
        type: string
      registry_user:
        type: string
      registry_pass:
        type: string
      slack_channel:
        type: string
      registry_name:
        type: string
        default: "docker.io"
      analyze_timeout:
        type: string
        default: "300"
      policy_failure:
        type: boolean
        default: true
    steps:
      - run:
          command: |
            apk update &&
            apk add bash curl
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - anchore/start_engine
      - anchore/add_private_registry:
          registry_name: "<< parameters.registry_name >>"
          registry_user: "<< parameters.registry_user >>"
          registry_pass: "<< parameters.registry_pass >>"
      - anchore/analyze_image:
          image_name: "<< parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          timeout: "<< parameters.analyze_timeout >>"
      - anchore/policy_evaluation:
          image_name: "<< parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          policy_failure: "<< parameters.policy_failure >>"
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports
      - slack/status:
          channel: "<< parameters.slack_channel >>"
          failure_message: |
            ':alert: Scan for << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >> has failed'
          success_message: |
            ':mag: Scanned  << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >> successfully'

######################## common stuff
suffixend_def_param: &suffixend_def_param
  #############################
  #  /!\ /!\ /!\ /!\ /!\ /!\  #
  #   Set something here if   #
  # you do not want to update #
  #      official images.     #
  # Be aware of latest value! #
  #  /!\ /!\ /!\ /!\ /!\ /!\  #
  #############################
  suffixend:
    type: string
    default: ""
    # example for test build:
    # default: "_<< pipeline.git.branch >>"
    # WHEN USING A VALUE HERE,
    # YOU HAVE TO REMOVE "latest: true" IF
    # SET IN A JOB !
job_def_param: &job_def_param
  parameters:
    <<: *suffixend_def_param

filters: &filters
  filters:
    branches:
      only: master

job_options: &job_options
  context:
    - cloud-qa
  <<: *filters

environment_jahia: &environment_jahia
  environment:
    SUPER_USER_PASSWORD: jahia
    MYSQL_ROOT_PASSWORD: jahia
    DB_HOST: localhost
    DB_PASS: jahia
    PROCESSING_SERVER: "true"
    MAX_RAM_PERCENTAGE: "70"
    RESTORE_MODULE_STATES: "false"
    RESTORE_PERSISTED_CONFIGURATION: "false"

environment_db: &environment_db
  environment:
    MYSQL_ROOT_PASSWORD: jahia
    MYSQL_DATABASE: jahia
    MYSQL_USER: jahia
    MYSQL_PASSWORD: jahia

db_container: &db_container
  - image: circleci/mysql:5.7
    <<: *environment_db
####################################

jobs:
  ################################## 8.0.0.0
  build_8010:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.1.0"
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.1/Jahia-EnterpriseDistribution-8.0.1.0-r60669.4716.jar"
  scan_latest:
    parameters:
      slack_channel:
        type: string
        default: ""
      <<: *suffixend_def_param
    executor: anchore/anchore_engine
    steps:
      - scan_jahia:
          jver: "8.0.1.0"
          tag_suffix: "<< parameters.suffixend >>"
          registry_user: "$DOCKER_LOGIN"
          registry_pass: "$DOCKER_PASSWORD"
          slack_channel: "<< parameters.slack_channel >>"


workflows:
  version: 2
  build_all_jahia:
    jobs:
      ### Build images, push them to a private repo and test them ###
      ############# 8.0.1.0
      - build_8010:
          <<: *job_options
      - scan_latest:
          <<: *job_options
          slack_channel: "slack_trigger_test"
          requires:
            - build_8010
